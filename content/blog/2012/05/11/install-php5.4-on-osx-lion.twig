{% extends "main.twig" %}
{% block content %}
Now days i use a Macbook Pro as my main machine and even a Mac Mini at work but I still do most of my development within Linux and BSD servers and virtual machines. Next week however I'm doing a presentation on <a href="http://proemframework.org" title="Proem PHP5.4 MVC">Proem</a> so I needed to get PHP5.4 up and running on Lion.

Apache and PHP come pre-installed on OSX, but there isn't a simple path to upgrading and mine was stuck at 5.3.2. I need 5.4 for <a href="http://proemframework.org" title="Proem PHP5.4 MVC">Proem</a>. I decided to compile from source, and allow the new version to simply replace the old one.

Thought this might be useful for others, so decided to post about it. Enjoy!

First, you need libjpeg and pcre installed. The easiest way to do this is using <a href="http://mxcl.github.com/homebrew/">Homebrew</a>

<pre lang="bash">
brew update
brew install libjpeg && brew install pcre
</pre>

Done.

Now, get hold of PHP. I already had a local checkout of PHP's source lying around, but you can easily get your hands on it via git.

<pre lang="bash">
git clone https://github.com/php/php-src.git
</pre>

Now, you need to build the configure script.

<pre lang="bash">
cd php-src
./buildconf
</pre>

Next, configure php.

<pre lang="bash">
./configure  \
--prefix=/usr  \
--mandir=/usr/share/man  \
--infodir=/usr/share/info  \
--sysconfdir=/private/etc  \
--with-apxs2=/usr/sbin/apxs  \
--enable-cli  \
--with-config-file-path=/etc  \
--with-libxml-dir=/usr  \
--with-openssl=/usr  \
--with-kerberos=/usr  \
--with-zlib=/usr  \
--enable-bcmath  \
--with-bz2=/usr  \
--enable-calendar  \
--with-curl=/usr  \
--enable-dba  \
--enable-exif  \
--enable-ftp  \
--with-gd  \
--enable-gd-native-ttf  \
--with-icu-dir=/usr  \
--with-iodbc=/usr  \
--with-ldap=/usr  \
--with-ldap-sasl=/usr  \
--with-libedit=/usr  \
--enable-mbstring  \
--enable-mbregex  \
--with-mysql=mysqlnd  \
--with-mysqli=mysqlnd  \
--without-pear  \
--with-pdo-mysql=mysqlnd  \
--with-mysql-sock=/var/mysql/mysql.sock  \
--with-readline=/usr  \
--enable-shmop  \
--with-snmp=/usr  \
--enable-soap  \
--enable-sockets  \
--enable-sysvmsg  \
--enable-sysvsem  \
--enable-sysvshm  \
--with-tidy  \
--enable-wddx  \
--with-xmlrpc  \
--with-iconv-dir=/usr  \
--with-xsl=/usr  \
--enable-zip  \
--with-pcre-regex  \
--with-pgsql=/usr  \
--with-pdo-pgsql=/usr \
--with-freetype-dir=/usr/X11 \
--with-jpeg-dir=/usr  \
--with-png-dir=/usr/X11
</pre>

Change whatever options you like. In particular, you might want to change --prefix=/usr to --prefix=/usr/local to preserve your original PHP.

Now, to build and install.

<pre lang="bash">
make && sudo make install
</pre>

Done.

Now, just to make things a bit easier to maintain in relation to developing with Apache, I also decided I wanted to have my own local vhosts file, and a www directory that I could easily get to.

I created a www directory within my ~/ and added a vhosts.conf file, log directory and a few vhosts.

Open (as root) /etc/apache2/extra/httpd-vhosts.conf and add...

<pre>
Include /Users/<yourusername>/www/vhosts.conf
</pre>

Then (as root) edit /etc/apache2/httpd.conf. On around line 179 is:

<pre>
<Directory />
    Options FollowSymLinks
    AllowOverride none 
    Order deny,allow
    Deny from all
</Directory>
</pre>

change it to:

<pre>
<Directory />
    Options FollowSymLinks
    AllowOverride All 
    Order deny,allow
    Deny from none
</Directory>
</pre>

Next I made my first vhost and added a simple php-info.php script. Create ~/www/vhosts.conf and add:

<pre>
<VirtualHost *:80>
    ServerAdmin trq@foo
    DocumentRoot "/Users/<yourusername>/www/php-info/htdocs"
    ServerName php-info
    ErrorLog "/Users/<yourusername>/www/error_log"
    CustomLog "/Users/<yourusername>/www/access_log" common
</VirtualHost>
</pre>

Then create your site:

<pre lang="bash">
mkdir -p ~/www/php-info/htdocs
echo '<?php phpinfo(); ?>' > ~/www/php-info/htdocs/index.php
</pre>

Add (as root) php-info to your /etc/hosts file.

<pre lang="bash">
echo 127.0.0.1 php-info | sudo tee -a /etc/hosts
</pre>

Restart Apache:

<pre lang="bash">
sudo apachectl restart
</pre>

Now vist http://php-info

Done.
{% endblock %}
